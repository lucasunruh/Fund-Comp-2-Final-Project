Date		Time		Work Done					Learned

3/13/15		2		Lazy Foo tutorial 1. Worked with		A new path had to be added to PATH and LD_LIBRARY_PATH.
				PATH vairalbes to allow for SDL			Learned that the header #include <SDL2/SDL.h> must be included
				compilation. Opened a white window,		at the beginning of the file - not simple <SDL.h> as Lazy Foo
				and created this document to keep		says. Learned simple SDL concepts such as loading windows and 
				track of work done on the project.		surfaces, and getting SDL errors.

3/14/15		1		Lazy Foo tutorial 2. Loaded a BMP		More basic SDL functions. Learned the concepts of blitting and
				image to a screen. Wrote a program		updating windows. Question: is there a way to upload images
				named sdl2.cpp that opens a window		via terminal or is webfile the best way to do it? In tutorial 
				with a downloaded BMP image. Lazy Foo		I learned about the SDL_Event class and how SDL_PollEvent is
				tutorial 3. Wrote program sdl3.cpp		used to process events such as keyboard, mouse, and joystick.
				that loads the BMP image from last		The program now opens and window with an image and it stays 
				tutorial and displays it until the user		there until the user pressed the "x" on the corner.
				presses the x on the window.

3/15/15		2		Lazy Foo tutorials 4 and 5 (skipped 6,		More SDL functions, including e.key.keystm.sym, which gives a
				because it's an installation guide).		system of knowing what key is pressed. Also, a function called
				Wrote two programs - one that handles		SDL_ConvertSurface, which takes in an SDL_Surface and changes
				key presses (using SDL_event and Poll		it to the format of the screen. These could be useful, because
				event), and the second was about		when loading many images for the project, it would be good to
				optimizing images so loading is faster		have optimal images so loading/blitting is faster.

3/16/15		2		Watched video tutorials from Coding Made	Learned about SDL_Rect and how it is used in SDL_RenderCopy to
				Easy. These went through some SDL function	crop an image and give it a destination. Worked with key presses
				I already knew about, but also some about	to make a small map/sprite that travels around with the pressing
				sprite animation / SDL_Rect which will be	of a key and has slight walking animation. 
				useful in our project.

3/17/15		1		Downloaded SDL 2 for my computer, as well	I learned how to download SDL 2 onto a computer, and continued
				as the SDL_image library. Moved my sprite	developing proficency with SDL_Texture and SDL_Renderer
				animation program to my local machine, and
				got it working there. Did some unsuccessful
				work with getting a minimap onto the screen.
				Also git copied the project repo onto my 
				local machine.

3/17/15		1		Continued working on the sprite.cpp program	I learned about the various function realted to TTF and text. 
				which is a character moving around. Watched	Continued getting used to using SDL_Rects, SDL_Render, and 	
				a video tutorial on TTF and text, which could	other simple SDL functions.
				be useful in the project. Made a Sprite class
				which encapsulates some of the function and
				drawing of the characters. Made it so I could
				easily make a second character using the same
				class. This character is controlled with the
				asdw keys.

3/22/15		2		Cleaned up git reposititory. Created folder	I learned about how to create folders in github from the 
				for various things such as logs, images,	terminal interface. I practiced writing make files that will
				test word and the actual project. Added some	come in handy because of the large number of classes that will
				tutorial work to the repository for Lab8	be used in the project.
				purposes. Created a simple Makefile for the
				Map class program written today. Worked on
				some debugging with limitied success.

3/25/15		3		Continued debugging Map class. Finished the	I didn't learn too much new - just found an error about using
				debugging process - the map now works as	the assignment operator with SDL_Texture. Commenting was as
				intended. It loads a map image and a 2d vector	normal commenting always is.
				of ints in as info. Also, I commented all of
				the existing files.

4/7/15		3		Worked on character heirarchy, including class	Did not learn much new - just developed classes as we have been
				Character and Hero. Developed an algorithm to	doing in class.
				find valid locations to move a character piece
				with a certain mobility stat based on the map.
				Have not tested due to the unwritten base
				class.

4/8/15		1		Moved around some function so that they would	Nothing new
				not have to be written multiple times (better
				management of inheritance heirarchy).

4/8/15		2		Debugging of Character, GamePiece, Hero, and	Not much new. Learned to devlop a more complicated heirarchy
				Cursor classes. Modified the Map_tester.cpp 	system. QUESTION: How does virtual work? Dynamic binding
				to include drawing a cursor and a hero on the	seemed to be a little weird.
				screen.

4/8/15		.5		Commented code in Character.(h/cpp) and 
				Hero.(h/cpp). Next step is to add a way for
				the phase of the hero to be controlled by some
				global variable.

4/8/15		.5		Added the ability for the phase of Cursor and	Learned about the SYNCV blah blah option that makes the loop
				Character to be changed based on the number	run at a reasonable rate. Developed more skill in logic that
				of clock cycles.				controls the phase of some objects.

4/9/15		.5		Changes the animation logic to be more
				internal. Created an update() function for
				Character and Cursor classes.

4/9/15		1		Made changes to the the heirarchy so that 	Learned that virtual functions must be defined in a class
				polymorphism can be used for GamePiece 		if polymorphism wants to be used (even if it just calls its
				objects. 					parent class's implementation of that function)

4/9/15		.5		Created a mechanism to change the hp
				of a character, and to kill it when
				its hp is 0.

4/10/15		2		Kept modifying the Cursor class to		Learned a decent amount about some advanced inheritance
				allow it to move across the screen.		concepts, and honed skills on virtual and pure virtual
				Now can move with key clicks and		functions.
				stop at the border of maps.

4/10/15		2		Developed Valid_board class and			I learned it is very confusing to have two different coordinate
				began debugging for the valid			systems going on - the graphics one and the standard 2d vector
				move checking of a character			one. Will continue to work this problem out in future.

4/11/15		2		Error checked the valid_moves			Increased my knowledge about coordinate systems used in the 
				function of Character class.			program and how important it is to keep track of them. Next
				I believe it works as intended			step is to add a blue highlight to valid squares and make a 
										character move into valid squares on command.

4/11/15		1		Made a blue_highlight.png that is		Not much new was learned.
				drawn wherever a character can move.

4/11/15		1		Made ability to draw where a player		Nothing much was learned
				can attack. Highlights those squares
				in red.

4/12/15		1		Found a memory error in the function		I learend about how && were checked. If the first fails, the 
				to add valid attack spaces to a valid		second is never run, which is useful for things like checking
				board. Fixed it by switching around		if an index is valid before actually using that index.
				which was the conditionals were checked.
				Now the function works for ranges 1 and 2,
				and can be easily adapted if larger
				attack ranges exist in the game.

4/14/15		2		Made Valid_board a datamember of		Learned about some concepts of composition and how non-default
				the Character class. Next step is		constructors are called in member list initialization.
				to maybe make Map a data member of
				Character so it doesn't have to be
				passed in. Or perhaps better would
				be just to have the 2d array of 
				ints that it needs for check valid
				move.

4/14/15		2		Changed the Character class to have		Learned about how to check for segfaults effectively.
				a 2d vector that is the same as the
				map's 2d vector. This allows 
				check_valid_move to be called without
				a Map object being passed in.

4/14/15		1		Added ability to write text			Learned about SDL_TTF and how to use it to write text to the
				to the screen. Will eventually			screen.
				become important for displaying
				stats of characters.
